{"version":3,"sources":["components/images/mukadimah.jpg","components/images/dadu.jpg","components/Carouselx.js","components/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Carouselx","useEffect","Carousel","Item","className","src","imgMukadimah","alt","Caption","Homepage","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Divider","Form","inline","FormControl","type","placeholder","Button","variant","Container","Row","Col","xs","md","Image","imgDadu","rounded","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sFAAAA,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,iMC4D5BC,EApDC,WAOZ,OALAC,qBAAU,cAEP,IAIC,6BAEA,kBAACC,EAAA,EAAD,KACA,kBAACA,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,sBACVC,IAAKC,IACLC,IAAI,gBAEN,kBAACL,EAAA,EAASM,QAAV,KACE,iDACA,2FAGJ,kBAACN,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,sBACVC,IAAKC,IACLC,IAAI,gBAGN,kBAACL,EAAA,EAASM,QAAV,KACE,kDACA,yFAGJ,kBAACN,EAAA,EAASC,KAAV,KACE,yBACEC,UAAU,sBACVC,IAAKC,IACLC,IAAI,gBAGN,kBAACL,EAAA,EAASM,QAAV,KACE,iDACA,oG,iGCyBGC,EAtDA,WAMX,OALAR,qBAAU,eAMN,6BAEA,kBAACS,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,MAC1B,kBAACF,EAAA,EAAOG,MAAR,CAAcC,KAAK,SAAnB,mBACA,kBAACJ,EAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,EAAA,EAAOO,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKf,UAAU,WACb,kBAACe,EAAA,EAAIC,KAAL,CAAUN,KAAK,SAAf,QACA,kBAACK,EAAA,EAAIC,KAAL,CAAUN,KAAK,SAAf,QACA,kBAACO,EAAA,EAAD,CAAaC,MAAM,WAAWJ,GAAG,sBAC/B,kBAACG,EAAA,EAAYlB,KAAb,CAAkBW,KAAK,eAAvB,UACA,kBAACO,EAAA,EAAYlB,KAAb,CAAkBW,KAAK,eAAvB,kBACA,kBAACO,EAAA,EAAYlB,KAAb,CAAkBW,KAAK,eAAvB,aACA,kBAACO,EAAA,EAAYE,QAAb,MACA,kBAACF,EAAA,EAAYlB,KAAb,CAAkBW,KAAK,eAAvB,oBAGJ,kBAACU,EAAA,EAAD,CAAMC,QAAM,GACV,kBAACC,EAAA,EAAD,CAAaC,KAAK,OAAOC,YAAY,SAASxB,UAAU,YACxD,kBAACyB,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,aAKN,kBAAC,EAAD,MAEA,kBAACC,EAAA,EAAD,CAAW3B,UAAU,aACnB,kBAAC4B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAO/B,IAAKgC,IAASC,SAAO,KAE9B,kBAACL,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAO/B,IAAKgC,IAASC,SAAO,KAE9B,kBAACL,EAAA,EAAD,CAAKC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CAAO/B,IAAKgC,IAASC,SAAO,SCnDzBC,MARf,WACE,OACE,yBAAKnC,UAAU,QACb,kBAAC,EAAD,QCIcoC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.7dff6f65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mukadimah.5ecdc168.jpg\";","module.exports = __webpack_public_path__ + \"static/media/dadu.2b12f00b.jpg\";","import React,{useEffect} from 'react';\nimport imgMukadimah from './images/mukadimah.jpg';\n//import $ from 'jquery';\n//import ReactDOM from 'react-dom';\nimport { \n    Carousel\n  } from 'react-bootstrap';\n\nconst Carouselx=()=>{\n\n    useEffect(() => {\n\n    }, []);\n\n    \n    return(\n        <div>\n\n        <Carousel>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carox\"\n            src={imgMukadimah}\n            alt=\"First slide\"\n          />\n          <Carousel.Caption>\n            <h3>First slide label</h3>\n            <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carox\"\n            src={imgMukadimah}\n            alt=\"Third slide\"\n          />\n      \n          <Carousel.Caption>\n            <h3>Second slide label</h3>\n            <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100 carox\"\n            src={imgMukadimah}\n            alt=\"Third slide\"\n          />\n      \n          <Carousel.Caption>\n            <h3>Third slide label</h3>\n            <p>Praesent commodo cursus magna, vel scelerisque nisl consectetur.</p>\n          </Carousel.Caption>\n        </Carousel.Item>\n      </Carousel>\n\n        </div>\n    );\n}\n\nexport default Carouselx;","import React,{useState,useEffect} from 'react';\nimport image1 from './images/mukadimah.jpg';\nimport Carouselx from './Carouselx';\nimport imgDadu from './images/dadu.jpg';\nimport { \n  Container,\n  Row,\n  Col,\n  Image,\n\n} from 'react-bootstrap';\n\n\nimport { \n  Button, \n  Nav,\n  Navbar,\n  Form,\n  NavDropdown,\n  FormControl \n} from 'react-bootstrap';\n\nconst Homepage=()=>{\n    useEffect(()=>{\n\n      // fix menu when passed\n      \n    });\n    return(\n        <div>\n     \n        <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand href=\"#home\">React-Bootstrap</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"#home\">Home</Nav.Link>\n            <Nav.Link href=\"#link\">Link</Nav.Link>\n            <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form inline>\n            <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n            <Button variant=\"outline-success\">Search</Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Carouselx/>\n\n      <Container className=\"eat-drink\">\n        <Row>\n          <Col xs={6} md={4}>\n            <Image src={imgDadu} rounded />\n          </Col>\n          <Col xs={6} md={4}>\n            <Image src={imgDadu} rounded />\n          </Col>\n          <Col xs={6} md={4}>\n            <Image src={imgDadu} rounded />\n          </Col>\n        </Row>\n      </Container>        \n\n\n\n\n        </div>\n    );\n}\n\nexport default Homepage;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Homepage from './components/Homepage';\n\nfunction App() {\n  return (\n    <div className=\"Appx\">\n      <Homepage/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}