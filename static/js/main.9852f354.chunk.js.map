{"version":3,"sources":["components/Simplenav.js","App.js","serviceWorker.js","index.js"],"names":["Simplenav","useEffect","class","src","href","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9852f354.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react';\n\nconst Simplenav=()=>{\n    useEffect(()=>{\n\n      // fix menu when passed\n      //view-source:https://semantic-ui.com/examples/homepage.html\n    });\n    return(\n        <div>\n        <div class=\"ui large top fixed hidden menu\">\n          <div class=\"ui container\">\n            <a class=\"active item\">Home</a>\n            <a class=\"item\">Work</a>\n            <a class=\"item\">Company</a>\n            <a class=\"item\">Careers</a>\n            <div class=\"right menu\">\n              <div class=\"item\">\n                <a class=\"ui button\">Log in</a>\n              </div>\n              <div class=\"item\">\n                <a class=\"ui primary button\">Sign Up</a>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div class=\"ui vertical inverted sidebar menu\">\n          <a class=\"active item\">Home</a>\n          <a class=\"item\">Work</a>\n          <a class=\"item\">Company</a>\n          <a class=\"item\">Careers</a>\n          <a class=\"item\">Login</a>\n          <a class=\"item\">Signup</a>\n        </div>\n\n        <div class=\"pusher\">\n        <div class=\"ui inverted vertical masthead center aligned segment\">\n      \n          <div class=\"ui container\">\n            <div class=\"ui large secondary inverted pointing menu\">\n              <a class=\"toc item\">\n                <i class=\"sidebar icon\"></i>\n              </a>\n              <a class=\"active item\">Home</a>\n              <a class=\"item\">Work</a>\n              <a class=\"item\">Company</a>\n              <a class=\"item\">Careers</a>\n              <div class=\"right item\">\n                <a class=\"ui inverted button\">Log in</a>\n                <a class=\"ui inverted button\">Sign Up</a>\n              </div>\n            </div>\n          </div>\n      \n          <div class=\"ui text container\">\n            <h1 class=\"ui inverted header\">\n              Imagine-a-Company\n            </h1>\n            <h2>Do whatever you want when you want to.</h2>\n            <div class=\"ui huge primary button\">Get Started <i class=\"right arrow icon\"></i></div>\n          </div>\n      \n        </div>\n      \n        <div class=\"ui vertical stripe segment\">\n          <div class=\"ui middle aligned stackable grid container\">\n            <div class=\"row\">\n              <div class=\"eight wide column\">\n                <h3 class=\"ui header\">We Help Companies and Companions</h3>\n                <p>We can give your company superpowers to do things that they never thought possible. Let us delight your customers and empower your needs...through pure data analytics.</p>\n                <h3 class=\"ui header\">We Make Bananas That Can Dance</h3>\n                <p>Yes that's right, you thought it was the stuff of dreams, but even bananas can be bioengineered.</p>\n              </div>\n              <div class=\"six wide right floated column\">\n                <img src=\"assets/images/wireframe/white-image.png\" class=\"ui large bordered rounded image\" />\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"center aligned column\">\n                <a class=\"ui huge button\">Check Them Out</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n      \n        <div class=\"ui vertical stripe quote segment\">\n          <div class=\"ui equal width stackable internally celled grid\">\n            <div class=\"center aligned row\">\n              <div class=\"column\">\n                <h3>\"What a Company\"</h3>\n                <p>That is what they all say about us</p>\n              </div>\n              <div class=\"column\">\n                <h3>\"I shouldn't have gone with their competitor.\"</h3>\n                <p>\n                  <img src=\"assets/images/avatar/nan.jpg\" class=\"ui avatar image\" /> <b>Nan</b> Chief Fun Officer Acme Toys\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      \n        <div class=\"ui vertical stripe segment\">\n          <div class=\"ui text container\">\n            <h3 class=\"ui header\">Breaking The Grid, Grabs Your Attention</h3>\n            <p>Instead of focusing on content creation and hard work, we have learned how to master the art of doing nothing by providing massive amounts of whitespace and generic content that can seem massive, monolithic and worth your attention.</p>\n            <a class=\"ui large button\">Read More</a>\n            <h4 class=\"ui horizontal header divider\">\n              <a href=\"#\">Case Studies</a>\n            </h4>\n            <h3 class=\"ui header\">Did We Tell You About Our Bananas?</h3>\n            <p>Yes I know you probably disregarded the earlier boasts as non-sequitur filler content, but its really true. It took years of gene splicing and combinatory DNA research, but our bananas can really dance.</p>\n            <a class=\"ui large button\">I'm Still Quite Interested</a>\n          </div>\n        </div>\n      \n      \n        <div class=\"ui inverted vertical footer segment\">\n          <div class=\"ui container\">\n            <div class=\"ui stackable inverted divided equal height stackable grid\">\n              <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">About</h4>\n                <div class=\"ui inverted link list\">\n                  <a href=\"#\" class=\"item\">Sitemap</a>\n                  <a href=\"#\" class=\"item\">Contact Us</a>\n                  <a href=\"#\" class=\"item\">Religious Ceremonies</a>\n                  <a href=\"#\" class=\"item\">Gazebo Plans</a>\n                </div>\n              </div>\n              <div class=\"three wide column\">\n                <h4 class=\"ui inverted header\">Services</h4>\n                <div class=\"ui inverted link list\">\n                  <a href=\"#\" class=\"item\">Banana Pre-Order</a>\n                  <a href=\"#\" class=\"item\">DNA FAQ</a>\n                  <a href=\"#\" class=\"item\">How To Access</a>\n                  <a href=\"#\" class=\"item\">Favorite X-Men</a>\n                </div>\n              </div>\n              <div class=\"seven wide column\">\n                <h4 class=\"ui inverted header\">Footer Header</h4>\n                <p>Extra space for a call to action inside the footer that could help re-engage users.</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n        </div>\n    );\n}\n\nexport default Simplenav;","import React from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport Simplenav from './components/Simplenav'\n\nfunction App() {\n  return (\n    <div className=\"Appx\">\n      <Simplenav/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}